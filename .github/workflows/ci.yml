# TODO:
#	1.	Caching the micromamba env is possible with actions/cache keyed on environment.lock.yml. Add it later once the workflow stabilises.
#	2.	For Go and Node steps, chain them after the bootstrap—each language toolchain is independent.
name: CI

on:
  push:
    branches: [ main, feature/** ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ────────────────────────────────────────────────────────────────
      # Caches
      # ────────────────────────────────────────────────────────────────
      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Cache Micromamba packages & env
        id: mamba-cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/mamba
          key: ${{ runner.os }}-mamba-${{ hashFiles('environment.lock.yml') }}

      # ────────────────────────────────────────────────────────────────
      # Bootstrap env (creates or updates from environment.yml and
      # regenerates environment.lock.yml)
      # ────────────────────────────────────────────────────────────────
      - name: Bootstrap Python env
        env:
          MAMBA_ROOT_PREFIX: ${{ runner.temp }}/mamba
        run: bash ./scripts/bootstrap.sh

      # ────────────────────────────────────────────────────────────────
      # Drift check – fail if lock file not up-to-date
      # ────────────────────────────────────────────────────────────────
      - name: Check lockfile up to date
        run: |
          micromamba env export -n ai-smarthome --no-builds > new.lock.yml
          diff -q new.lock.yml environment.lock.yml

      - name: Run tests
        env:
          MAMBA_ROOT_PREFIX: ${{ runner.temp }}/mamba      
        run: micromamba run -n ai-smarthome pytest -q ml/tests