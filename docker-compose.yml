services:
  backend:
    build: 
      context: ./backend
      target: ${APP_ENV:-development}
    environment:
      - APP_ENV=${APP_ENV:-development}
    env_file:
      - ./backend/.env.${APP_ENV:-development}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}"        
    volumes:
      - ./backend:/usr/src/app
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    #   interval: 30s
    #   timeout: 10s

  frontend:
    build: 
      context: ./frontend
      target: ${NODE_ENV:-development}
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./frontend/.env.${NODE_ENV:-development}

  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - ./.env.db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
